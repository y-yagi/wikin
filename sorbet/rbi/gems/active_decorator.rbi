# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/active_decorator/all/active_decorator.rbi
#
# active_decorator-1.3.0
module ActiveDecorator
  def self.config; end
  def self.configure; end
end
module ActiveDecorator::Helpers
  def method_missing(method, *args, &block); end
end
module ActiveDecorator::Decorated
end
class ActiveDecorator::Decorator
  def decorate(obj); end
  def decorate_association(owner, target); end
  def decorator_for(model_class); end
  def initialize; end
  def self.allocate; end
  def self.instance; end
  def self.new(*arg0); end
  extend Singleton::SingletonClassMethods
  include Singleton
end
module ActiveDecorator::RelationDecoratorLegacy
  def to_a; end
end
module ActiveDecorator::RelationDecorator
  def records; end
end
class ActiveDecorator::Railtie < Rails::Railtie
end
module ActiveDecorator::Monkey
end
module ActiveDecorator::Monkey::ActiveRecord
end
module ActiveDecorator::Monkey::ActiveRecord::Associations
end
module ActiveDecorator::Monkey::ActiveRecord::Associations::Association
  def target; end
end
module ActiveDecorator::Monkey::ActiveRecord::Associations::CollectionProxy
  def find_nth_from_last(*arg0); end
  def find_nth_with_limit(*arg0); end
  def last(*arg0); end
  def take(*arg0); end
end
module ActiveDecorator::Monkey::ActiveRecord::Associations::CollectionAssociation
  def build_record(*arg0); end
end
module ActiveDecorator::Monkey::ActiveRecord::AssociationRelation
  def spawn(*arg0); end
end
module ActiveDecorator::Monkey::ActionView
end
module ActiveDecorator::Monkey::ActionView::PartialRenderer
  def setup(*arg0); end
end
