# This is an autogenerated file for routes helper methods

# typed: strong
class ActionController::Base
  extend T::Sig

  # Sigs for route /
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def root_url(*args, **kwargs); end

  # Sigs for route /admin/dump(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_dump_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def admin_dump_url(*args, **kwargs); end

  # Sigs for route /pages/titles(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def titles_pages_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def titles_pages_url(*args, **kwargs); end

  # Sigs for route /pages/search(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def search_pages_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def search_pages_url(*args, **kwargs); end

  # Sigs for route /pages/preview(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def preview_pages_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def preview_pages_url(*args, **kwargs); end

  # Sigs for route /pages/:id/restore(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def restore_page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def restore_page_url(*args, **kwargs); end

  # Sigs for route /pages/:id/undo(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def undo_page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def undo_page_url(*args, **kwargs); end

  # Sigs for route /pages/:id/archive(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def archive_page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def archive_page_url(*args, **kwargs); end

  # Sigs for route /pages(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def pages_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def pages_url(*args, **kwargs); end

  # Sigs for route /pages/new(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def new_page_url(*args, **kwargs); end

  # Sigs for route /pages/:id/edit(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def edit_page_url(*args, **kwargs); end

  # Sigs for route /pages/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def page_url(*args, **kwargs); end

  # Sigs for route /archived_pages/:id/restore(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def restore_archived_page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def restore_archived_page_url(*args, **kwargs); end

  # Sigs for route /archived_pages(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def archived_pages_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def archived_pages_url(*args, **kwargs); end

  # Sigs for route /archived_pages/:id(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def archived_page_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def archived_page_url(*args, **kwargs); end

  # Sigs for route /graphiql
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def graphiql_rails_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def graphiql_rails_url(*args, **kwargs); end

  # Sigs for route /graphql(.:format)
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def graphql_path(*args, **kwargs); end
  sig { params(args: T.untyped, kwargs: T.untyped).returns(String) }
  def graphql_url(*args, **kwargs); end


  # Section Routes for GraphiQL::Rails::Engine

end
